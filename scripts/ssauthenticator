#!/usr/bin/perl

# Copyright 2017 Koha-Suomi
# Copyright 2016 Vaara-kirjastot
#

use Modern::Perl;
use Carp;
use Getopt::Long qw(:config no_ignore_case);

use SSAuthenticator;
use SSAuthenticator::Mailbox;

my ($help, $message, $verbose);
my @params;

GetOptions(
    'h|help'                      => \$help,
    'v|verbose=i'                 => \$verbose,
    'm|message=s'                 => \$message,
    'p|params=s'                  => \@params,
);

$ENV{SSA_LOG_LEVEL} = $verbose if $verbose;

my $usage = <<USAGE;

SSAuthenticator - library access control system

SSAuthenticator is a program that controls access to a library using Koha instance's
REST API and its local cache.

  -h --help               HELP!
  -v --verbose            Int, sets the verbosity level:
                            -1 less verbose
                            2  most verbose

Mailbox-feature

One can send commands to the SSAuthenticator via this script or by manually writing files to the MailboxDir.
It is recommended to use the script to send messages to the SSAuthenticator.

  -m Send a command to the mailbox
  -p Specify the parameter for mailbox commands

EXAMPLES

    #Runs the SSAuthenticator-daemon using system-level configurations
    ssauthenticator

    #Sends a "read virtual barcode 167A0123123"-command to the SSAuthenticator's mailbox
    ssauthenticator -m controlAccess -p 167A0123123

USAGE

if ($help) {
  print $usage;
  exit 0;
}

if ($message) {
    SSAuthenticator::Mailbox::sendMessage($message, @params);
}
else {
    SSAuthenticator->main();
}
